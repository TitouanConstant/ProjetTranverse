const AuthenticationController = require('./controllers/AuthenticationController')
const AuthenticationControllerPolicy = require('./policies/AuthenticationControllerPolicy')
const AdminController = require('./controllers/AdminController')
const isAuthenticated = require('./policies/isAuthenticated')
const WatchController = require('./controllers/WatchController')
const CartController = require('./controllers/CartController')
const RatingController = require('./controllers/RatingController')

module.exports = (app) => {
  app.post('/register', AuthenticationControllerPolicy.register, AuthenticationController.register)
  app.post('/login', AuthenticationController.login)
  app.get('/admin/users', isAuthenticated, AdminController.getAllUsers)
  app.put('/admin/users/:userId', isAuthenticated, AdminController.updateUser)
  app.delete('/admin/users/:userId', isAuthenticated, AdminController.deleteUser)
  app.post('/admin/watches', isAuthenticated, WatchController.addWatch)
  app.put('/admin/watches/:watchId', isAuthenticated, WatchController.updateWatch)
  app.delete('/admin/watches/:watchId', isAuthenticated, WatchController.deleteWatch)
  app.get('/watches', isAuthenticated, WatchController.getAllWatches)
  app.get('/watches/search', isAuthenticated, WatchController.searchWatches)
  app.get('/watches/sort', isAuthenticated, WatchController.sortWatchesByPrice)
  app.get('/watches/filtered', isAuthenticated, WatchController.getFilteredWatches)
  app.get('/brands', WatchController.getBrands)
  app.post('/cart/add', isAuthenticated, CartController.addToCart)
  app.delete('/cart/remove/:watchId', isAuthenticated, CartController.removeFromCart)
  app.get('/cart', isAuthenticated, CartController.getCart)
  app.post('/cart/increase/:watchId', isAuthenticated, CartController.increaseCartItemQuantity)
  app.post('/cart/decrease/:watchId', isAuthenticated, CartController.decreaseCartItemQuantity)
  app.post('/checkout', isAuthenticated, CartController.checkout)
  app.post('/ratings', isAuthenticated, RatingController.addRating)
  app.get('/watches/:watchId/ratings', isAuthenticated, RatingController.getRatingsForWatch)
  app.get('/watches/:watchId/average-rating', isAuthenticated, RatingController.getAverageRatingForWatch)
  app.get('/ratings/breakdown/:watchId', isAuthenticated, RatingController.getRatingsBreakdownForWatch)
  app.get('/ratings/:watchId', isAuthenticated, RatingController.getUserRatingForWatch)
}
